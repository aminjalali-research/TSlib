{
  "comparison_metadata": {
    "date": "2025-08-21",
    "dataset": "AtrialFibrillation",
    "data_source": "UEA",
    "dataset_size": {
      "samples": 15,
      "timesteps": 640,
      "features": 2
    },
    "training_config": {
      "epochs": 30,
      "seed": 42,
      "task_type": "classification"
    }
  },
  
  "model_results": {
    "timehut_baseline": {
      "model_path": "/home/amin/TSlib/models/timehut/ts2vec.py",
      "scenario": "baseline",
      "description": "Optimized TimeHUT with performance enhancements",
      "performance_metrics": {
        "accuracy": 0.1333,
        "auprc": 0.3233,
        "training_time_seconds": 9.94,
        "training_time_per_epoch": 0.331,
        "evaluation_time_seconds": 0.06
      },
      "training_config": {
        "batch_size": 64,
        "learning_rate": 0.0015,
        "optimizer": "AdamW",
        "mixed_precision": true,
        "optimizations": [
          "dynamic_batch_sizing",
          "dataset_specific_lr",
          "cuda_optimization",
          "tf32_acceleration",
          "memory_optimization"
        ]
      },
      "training_dynamics": {
        "initial_loss": 84.14,
        "final_loss": 2.91,
        "convergence_pattern": "stable_decreasing",
        "loss_volatility": "low"
      },
      "resource_usage": {
        "gpu_memory_optimized": true,
        "mixed_precision_used": true,
        "compilation_attempted": true,
        "compilation_successful": false
      }
    },
    
    "timehut_amc": {
      "model_path": "/home/amin/TSlib/models/timehut/ts2vec.py",
      "scenario": "amc_only",
      "description": "TimeHUT with AMC (Adaptive Margin Contrastive) losses",
      "performance_metrics": {
        "accuracy": 0.0667,
        "auprc": 0.2661,
        "training_time_seconds": 11.93,
        "training_time_per_epoch": 0.398,
        "evaluation_time_seconds": 0.07
      },
      "training_config": {
        "batch_size": 64,
        "learning_rate": 0.0015,
        "optimizer": "AdamW",
        "mixed_precision": true,
        "amc_settings": {
          "amc_instance": 0.5,
          "amc_temporal": 0.3,
          "amc_margin": 0.5
        }
      },
      "training_dynamics": {
        "initial_loss": 115.60,
        "final_loss": 8.04,
        "convergence_pattern": "volatile",
        "loss_volatility": "very_high"
      },
      "notes": [
        "AMC parameters may need tuning for this dataset",
        "High loss volatility suggests instability",
        "Lower accuracy suggests overfitting or suboptimal parameters"
      ]
    },
    
    "regular_ts2vec": {
      "model_path": "/home/amin/TSlib/models/ts2vec/ts2vec.py", 
      "scenario": "standard",
      "description": "Standard TS2Vec implementation without optimizations",
      "performance_metrics": {
        "accuracy": 0.1333,
        "auprc": 0.3100,
        "training_time_seconds": 3.09,
        "training_time_per_epoch": 0.103,
        "evaluation_time_seconds": null
      },
      "training_config": {
        "batch_size": 8,
        "learning_rate": 0.001,
        "optimizer": "AdamW",
        "mixed_precision": false,
        "optimizations": []
      },
      "training_dynamics": {
        "initial_loss": 71.66,
        "final_loss": 2.83,
        "convergence_pattern": "smooth_decreasing",
        "loss_volatility": "moderate"
      },
      "resource_usage": {
        "gpu_memory_optimized": false,
        "mixed_precision_used": false,
        "minimal_overhead": true
      }
    }
  },
  
  "comparative_analysis": {
    "accuracy_comparison": {
      "best_model": "timehut_baseline,regular_ts2vec",
      "best_score": 0.1333,
      "worst_model": "timehut_amc",
      "worst_score": 0.0667,
      "accuracy_ranking": [
        {"model": "timehut_baseline", "accuracy": 0.1333, "rank": 1},
        {"model": "regular_ts2vec", "accuracy": 0.1333, "rank": 1}, 
        {"model": "timehut_amc", "accuracy": 0.0667, "rank": 3}
      ]
    },
    
    "auprc_comparison": {
      "best_model": "timehut_baseline",
      "best_score": 0.3233,
      "worst_model": "timehut_amc", 
      "worst_score": 0.2661,
      "improvement_over_regular": 0.0133,
      "improvement_percentage": 4.29,
      "auprc_ranking": [
        {"model": "timehut_baseline", "auprc": 0.3233, "rank": 1},
        {"model": "regular_ts2vec", "auprc": 0.3100, "rank": 2},
        {"model": "timehut_amc", "auprc": 0.2661, "rank": 3}
      ]
    },
    
    "speed_comparison": {
      "fastest_model": "regular_ts2vec",
      "fastest_time": 3.09,
      "slowest_model": "timehut_amc",
      "slowest_time": 11.93,
      "speed_ranking": [
        {"model": "regular_ts2vec", "time": 3.09, "rank": 1, "speedup": "1.0x"},
        {"model": "timehut_baseline", "time": 9.94, "rank": 2, "speedup": "0.31x"},
        {"model": "timehut_amc", "time": 11.93, "rank": 3, "speedup": "0.26x"}
      ],
      "timehut_overhead": {
        "baseline_vs_regular": "3.22x slower",
        "amc_vs_regular": "3.86x slower",
        "overhead_sources": [
          "larger_batch_size",
          "mixed_precision_overhead", 
          "optimization_monitoring",
          "enhanced_profiling"
        ]
      }
    },
    
    "efficiency_analysis": {
      "time_per_epoch_comparison": {
        "regular_ts2vec": 0.103,
        "timehut_baseline": 0.331,
        "timehut_amc": 0.398
      },
      "performance_per_second": {
        "regular_ts2vec": {
          "accuracy_per_second": 0.0431,
          "auprc_per_second": 0.1003
        },
        "timehut_baseline": {
          "accuracy_per_second": 0.0134,
          "auprc_per_second": 0.0325
        },
        "timehut_amc": {
          "accuracy_per_second": 0.0056,
          "auprc_per_second": 0.0223
        }
      }
    }
  },
  
  "recommendations": {
    "by_use_case": {
      "maximum_speed": {
        "recommended_model": "regular_ts2vec",
        "reason": "3.2x faster with equivalent accuracy",
        "trade_offs": "Slightly lower AUPRC (-4.3%)"
      },
      "best_precision": {
        "recommended_model": "timehut_baseline", 
        "reason": "Highest AUPRC (0.3233) with equivalent accuracy",
        "trade_offs": "3.2x slower training time"
      },
      "research_experimentation": {
        "recommended_model": "timehut_baseline",
        "reason": "Advanced features, multiple scenarios, comprehensive monitoring",
        "trade_offs": "Higher complexity and training time"
      }
    },
    
    "optimization_opportunities": {
      "timehut_improvements": [
        "Tune AMC parameters for better performance",
        "Implement adaptive batch sizing",
        "Add early stopping for efficiency",
        "Optimize mixed precision implementation"
      ],
      "regular_ts2vec_improvements": [
        "Add mixed precision for speed",
        "Implement larger batch sizes for stability",
        "Add comprehensive monitoring",
        "Consider gradient accumulation"
      ]
    }
  },
  
  "technical_insights": {
    "batch_size_impact": {
      "regular_ts2vec_batch_8": "Fast iterations, potentially less stable gradients",
      "timehut_batch_64": "Slower iterations, more stable gradients, better GPU utilization"
    },
    
    "loss_convergence_patterns": {
      "regular_ts2vec": "Smooth exponential decay",
      "timehut_baseline": "Stable plateau-based convergence", 
      "timehut_amc": "Highly volatile, potential instability"
    },
    
    "optimization_trade_offs": {
      "mixed_precision": "Enables larger batches but adds overhead",
      "dynamic_batching": "Better GPU utilization but slower startup",
      "comprehensive_monitoring": "Better insights but performance cost"
    }
  },
  
  "dataset_specific_notes": {
    "atrial_fibrillation_characteristics": {
      "small_dataset": "15 samples - may not fully utilize large batch advantages",
      "high_dimensionality": "640 timesteps - benefits from GPU optimization",
      "binary_classification": "AUPRC more important than raw accuracy"
    },
    
    "generalization_concerns": {
      "small_sample_size": "Results may not generalize to larger datasets",
      "single_dataset": "Need testing on multiple datasets for robust comparison",
      "parameter_sensitivity": "Small datasets more sensitive to hyperparameter choices"
    }
  }
}
