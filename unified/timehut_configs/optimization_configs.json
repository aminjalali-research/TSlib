{
  "hyperparameter_optimization": {
    "description": "Comprehensive hyperparameter optimization studies",
    
    "single_objective": {
      "accuracy_optimization": {
        "objective": "maximize_accuracy",
        "search_space": {
          "amc_instance": {"type": "float", "range": [0.0, 5.0], "step": 0.1},
          "amc_temporal": {"type": "float", "range": [0.0, 5.0], "step": 0.1},
          "amc_margin": {"type": "float", "range": [0.1, 1.0], "step": 0.1},
          "min_tau": {"type": "float", "range": [0.07, 0.3], "step": 0.01},
          "max_tau": {"type": "float", "range": [0.6, 1.0], "step": 0.02},
          "t_max": {"type": "float", "range": [5.0, 20.0], "step": 1.0}
        },
        "optimization_method": "pyhopper",
        "search_steps": 50,
        "datasets": ["Chinatown", "SyntheticControl"],
        "epochs": 100
      },
      
      "speed_optimization": {
        "objective": "minimize_training_time",
        "constraints": {"accuracy_threshold": 0.95},
        "search_space": {
          "batch_size": {"type": "categorical", "choices": [8, 16, 32, 64]},
          "precision": {"type": "categorical", "choices": ["fp16", "fp32", "mixed"]},
          "amc_instance": {"type": "float", "range": [0.0, 2.0], "step": 0.1},
          "amc_temporal": {"type": "float", "range": [0.0, 2.0], "step": 0.1}
        },
        "optimization_method": "pyhopper",
        "search_steps": 30,
        "datasets": ["Chinatown"],
        "epochs": 50
      },
      
      "memory_optimization": {
        "objective": "minimize_memory_usage",
        "constraints": {"accuracy_threshold": 0.90},
        "search_space": {
          "batch_size": {"type": "categorical", "choices": [4, 8, 16, 32]},
          "precision": {"type": "categorical", "choices": ["fp16", "mixed"]},
          "aggressive_gc": {"type": "boolean"},
          "pin_memory": {"type": "boolean"}
        },
        "optimization_method": "grid_search",
        "datasets": ["AtrialFibrillation"],
        "epochs": 50
      }
    },
    
    "multi_objective": {
      "accuracy_vs_speed": {
        "objectives": ["maximize_accuracy", "minimize_training_time"],
        "weights": [0.7, 0.3],
        "search_space": {
          "amc_instance": {"type": "float", "range": [0.0, 3.0], "step": 0.2},
          "amc_temporal": {"type": "float", "range": [0.0, 3.0], "step": 0.2},
          "min_tau": {"type": "float", "range": [0.1, 0.25], "step": 0.05},
          "max_tau": {"type": "float", "range": [0.6, 0.9], "step": 0.1},
          "batch_size": {"type": "categorical", "choices": [16, 32, 64]}
        },
        "optimization_method": "pyhopper",
        "search_steps": 40,
        "datasets": ["Chinatown", "SyntheticControl"],
        "epochs": 100
      },
      
      "accuracy_vs_memory": {
        "objectives": ["maximize_accuracy", "minimize_memory_usage"],
        "weights": [0.8, 0.2],
        "search_space": {
          "amc_instance": {"type": "float", "range": [0.0, 2.0], "step": 0.2},
          "amc_temporal": {"type": "float", "range": [0.0, 2.0], "step": 0.2},
          "batch_size": {"type": "categorical", "choices": [8, 16, 32]},
          "precision": {"type": "categorical", "choices": ["fp16", "mixed"]}
        },
        "optimization_method": "evolutionary",
        "population_size": 20,
        "generations": 25,
        "datasets": ["AtrialFibrillation"],
        "epochs": 75
      }
    },
    
    "advanced_methods": {
      "bayesian_optimization": {
        "description": "Bayesian optimization using Gaussian processes",
        "acquisition_function": "expected_improvement",
        "search_space": {
          "amc_instance": {"type": "float", "range": [0.0, 3.0]},
          "amc_temporal": {"type": "float", "range": [0.0, 3.0]},
          "amc_margin": {"type": "float", "range": [0.2, 0.8]},
          "min_tau": {"type": "float", "range": [0.1, 0.25]},
          "max_tau": {"type": "float", "range": [0.65, 0.85]}
        },
        "initial_points": 10,
        "optimization_steps": 30,
        "datasets": ["Chinatown"],
        "epochs": 100
      },
      
      "random_search": {
        "description": "Random search baseline for comparison",
        "search_space": {
          "amc_instance": {"type": "float", "range": [0.0, 5.0]},
          "amc_temporal": {"type": "float", "range": [0.0, 5.0]},
          "amc_margin": {"type": "float", "range": [0.1, 1.0]},
          "min_tau": {"type": "float", "range": [0.07, 0.3]},
          "max_tau": {"type": "float", "range": [0.6, 1.0]},
          "t_max": {"type": "float", "range": [5.0, 20.0]}
        },
        "search_steps": 50,
        "datasets": ["Chinatown", "SyntheticControl"],
        "epochs": 100
      }
    }
  },
  
  "optimization_comparison": {
    "description": "Compare different optimization methods",
    "methods": ["pyhopper", "grid_search", "random_search", "bayesian"],
    "common_search_space": {
      "amc_instance": [0.0, 0.5, 1.0, 2.0],
      "amc_temporal": [0.0, 0.5, 1.0, 2.0],
      "min_tau": [0.1, 0.15, 0.2],
      "max_tau": [0.7, 0.8, 0.9]
    },
    "evaluation_metrics": [
      "best_accuracy_found",
      "time_to_convergence", 
      "computational_cost",
      "reproducibility"
    ],
    "datasets": ["Chinatown"],
    "budget": {"time_limit": 3600, "max_evaluations": 50}
  }
}
